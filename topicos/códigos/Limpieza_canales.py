# -*- coding: utf-8 -*-
"""limpieza_canales.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1HGOAQCKVNjrh3942QgjyS1t4Z7tMugGt
"""

from google.colab import drive
drive.mount('/content/drive')

# pipeline_limpieza_categoria.py
import pandas as pd
import re

def remove_emojis(text):
    return re.sub(r'[^\w\s,.!?-]', '', text)

def clean_channel_name(channel):
    # Normalización + reemplazos
    if not isinstance(channel, str): return channel
    channel = remove_emojis(channel)
    channel = " ".join(channel.split()).lower().strip()

    # Reemplazos específicos
    mapping = {
        "palestinetv": ["palestinetv", "تلفزيون فلسطين"],
        "eye.on.palestine": ["eye.on.palestine"],
        "cnn": ["cnn"],
        "bbc": ["bbc"],
        "al jazeera": ["al jazeera"],
        "france 24": ["france 24"],
        "dw news": ["dw news", "deutsche welle"],
        "trt world": ["trt world"],
        "i24news": ["i24news"],
        "electronic intifada": ["the electronic intifada"],
        "iltv": ["il tv", "iltv israel news"],
        "jerusalem post": ["the jerusalem post"],
        "idf": ["israel defense forces", "idf"],
        "quds news": ["quds news"],
        "standwithus": ["standwithus"],
        "mondoweiss": ["mondoweiss"],
        "palestine deep dive": ["palestine deep dive"],
        "middle east eye": ["middle east eye"],
        "voices for gaza": ["voices for gaza"],
        "times of israel": ["the times of israel"]
    }
    for k, variants in mapping.items():
        if any(v in channel for v in variants):
            return k
    return channel

def assign_category(channel):
    palestina = {"electronic intifada", "mondoweiss", "palestine deep dive", "voices for gaza", "quds news", "palestinetv", "eye.on.palestine"}
    israel = {"i24news", "idf", "iltv", "standwithus", "jerusalem post", "times of israel"}
    internacional = {"cnn", "bbc", "dw news", "france 24"}
    intl_meo = {"al jazeera", "trt world", "middle east eye", "al mayadeen english"}

    if channel in palestina: return "Palestina"
    elif channel in israel: return "Israel"
    elif channel in internacional: return "Internacional"
    elif channel in intl_meo: return "Internacional Medio Oriente"
    else: return "Desconocido"

# === Ejecutar ===
file_path = "/content/drive/MyDrive/TG/noticias_youtube.csv"
df = pd.read_csv(file_path)
df['channel_clean'] = df['channel'].apply(clean_channel_name)
df['categoria'] = df['channel_clean'].apply(assign_category)

# Guardar resultado limpio
output_path = "/content/drive/MyDrive/TG/noticias_youtube_limpio.csv"
df.to_csv(output_path, index=False)
print(f"✅ Archivo limpio guardado en {output_path}")